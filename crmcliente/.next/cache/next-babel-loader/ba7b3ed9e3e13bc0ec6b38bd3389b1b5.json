{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\devak\\\\Downloads\\\\crmcliente\\\\crmcliente\\\\pages\\\\editarproducto\\\\[pid].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation actualizarProducto($id: ID!, $input: ProductoInput) {\\n            actualizarProducto(id:$id, input:$input) {\\n                id\\n                nombre\\n                existencia\\n                precio\\n            }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query obtenerProducto($id: ID!) {\\n        obtenerProducto(id: $id) {\\n            nombre\\n            precio\\n            existencia\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport { useRouter } from 'next/router';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\nvar OBTENER_PRODUCTO = gql(_templateObject());\nvar ACTUALIZAR_PRODUCTO = gql(_templateObject2());\n\nvar EditarProducto = function EditarProducto() {\n  var router = useRouter();\n  var id = router.query.id; // console.log(id)\n  // Consultar para obtener el producto\n\n  var _useQuery = useQuery(OBTENER_PRODUCTO, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // Mutation para modificar el producto\n\n\n  var _useMutation = useMutation(ACTUALIZAR_PRODUCTO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      actualizarProducto = _useMutation2[0]; // Schema de validación\n\n\n  var schemaValidacion = Yup.object({\n    nombre: Yup.string().required('El nombre del producto es obligatorio'),\n    existencia: Yup.number().required('Agrega la cantidad disponible').positive('No se aceptan números negativos').integer('La existencia deben ser números enteros'),\n    precio: Yup.number().required('El precio es obligatorio').positive('No se aceptan números negativos')\n  }); // console.log(data)\n  // console.log(loading)\n  // console.log(error)\n\n  if (loading) return 'Cargando...';\n\n  if (!data) {\n    return 'Acción no permitida';\n  }\n\n  var actualizarInfoProducto = function actualizarInfoProducto(valores) {\n    var nombre, existencia, precio, _await$actualizarProd, _data;\n\n    return _regeneratorRuntime.async(function actualizarInfoProducto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // console.log(valores);\n            nombre = valores.nombre, existencia = valores.existencia, precio = valores.precio;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(actualizarProducto({\n              variables: {\n                id: id,\n                input: {\n                  nombre: nombre,\n                  existencia: existencia,\n                  precio: precio\n                }\n              }\n            }));\n\n          case 4:\n            _await$actualizarProd = _context.sent;\n            _data = _await$actualizarProd.data;\n            // console.log(data);\n            // Redirgir hacia productos\n            router.push('/productos'); // Mostrar una alerta\n\n            Swal.fire('Correcto', 'El producto se actualizó correctamente', 'success');\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  var obtenerProducto = data.obtenerProducto;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-2xl text-gray-800 font-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Editar Producto\"), __jsx(\"div\", {\n    className: \"flex justify-center mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full max-w-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, __jsx(Formik, {\n    enableReinitialize: true,\n    initialValues: obtenerProducto,\n    validationSchema: schemaValidacion,\n    onSubmit: function onSubmit(valores) {\n      actualizarInfoProducto(valores);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, function (props) {\n    return __jsx(\"form\", {\n      className: \"bg-white shadow-md px-8 pt-6 pb-8 mb-4\",\n      onSubmit: props.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"nombre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, \"Nombre\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Nombre Producto\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.nombre,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    })), props.touched.nombre && props.errors.nombre ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, props.errors.nombre)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"existencia\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, \"Cantidad Disponible\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"existencia\",\n      type: \"number\",\n      placeholder: \"Cantidad Disponible\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.existencia,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    })), props.touched.existencia && props.errors.existencia ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, props.errors.existencia)) : null, __jsx(\"div\", {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      htmlFor: \"precio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, \"Precio\"), __jsx(\"input\", {\n      className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n      id: \"precio\",\n      type: \"number\",\n      placeholder: \"Precio Producto\",\n      onChange: props.handleChange,\n      onBlur: props.handleBlur,\n      value: props.values.precio,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    })), props.touched.precio && props.errors.precio ? __jsx(\"div\", {\n      className: \"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      className: \"font-bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, \"Error\"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, props.errors.precio)) : null, __jsx(\"input\", {\n      type: \"submit\",\n      className: \"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\",\n      value: \"Guardar Cambios\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }));\n  }))));\n};\n\nexport default EditarProducto;","map":{"version":3,"sources":["C:/Users/devak/Downloads/crmcliente/crmcliente/pages/editarproducto/[pid].js"],"names":["React","Layout","useRouter","gql","useQuery","useMutation","Formik","Yup","Swal","OBTENER_PRODUCTO","ACTUALIZAR_PRODUCTO","EditarProducto","router","id","query","variables","data","loading","error","actualizarProducto","schemaValidacion","object","nombre","string","required","existencia","number","positive","integer","precio","actualizarInfoProducto","valores","input","push","fire","console","log","obtenerProducto","props","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Layout from '../../components/Layout';\nimport { useRouter } from 'next/router'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Swal from 'sweetalert2';\n\nconst OBTENER_PRODUCTO = gql`\n    query obtenerProducto($id: ID!) {\n        obtenerProducto(id: $id) {\n            nombre\n            precio\n            existencia\n        }\n    }\n`;\n\nconst ACTUALIZAR_PRODUCTO = gql`\n    mutation actualizarProducto($id: ID!, $input: ProductoInput) {\n            actualizarProducto(id:$id, input:$input) {\n                id\n                nombre\n                existencia\n                precio\n            }\n    }\n`;\n\nconst EditarProducto = () => {\n    const router = useRouter();\n    const { query: { id } } = router;\n    // console.log(id)\n\n    // Consultar para obtener el producto\n    const { data, loading, error } = useQuery(OBTENER_PRODUCTO, {\n        variables: {\n            id\n        }\n    });\n\n    // Mutation para modificar el producto\n    const [ actualizarProducto ] = useMutation(ACTUALIZAR_PRODUCTO);\n\n    // Schema de validación\n    const schemaValidacion = Yup.object({\n        nombre: Yup.string() \n                    .required('El nombre del producto es obligatorio'), \n        existencia: Yup.number()\n                    .required('Agrega la cantidad disponible')\n                    .positive('No se aceptan números negativos')\n                    .integer('La existencia deben ser números enteros'),\n        precio: Yup.number()\n                    .required('El precio es obligatorio')\n                    .positive('No se aceptan números negativos')\n    });\n\n\n    // console.log(data)\n    // console.log(loading)\n    // console.log(error)\n\n    if(loading) return 'Cargando...';\n\n    if(!data) { \n        return 'Acción no permitida';\n    }\n\n    const actualizarInfoProducto = async valores => {\n        // console.log(valores);\n        const { nombre, existencia, precio } = valores;\n        try {\n            const {data} =  await actualizarProducto({\n                variables: {\n                    id, \n                    input: {\n                        nombre,\n                        existencia,\n                        precio\n                    }\n                }\n            });\n            // console.log(data);\n\n            // Redirgir hacia productos\n            router.push('/productos')\n\n            // Mostrar una alerta\n            Swal.fire(\n                'Correcto',\n                'El producto se actualizó correctamente',\n                'success'\n            )\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const { obtenerProducto } = data;\n\n    return ( \n        <Layout>\n            <h1 className=\"text-2xl text-gray-800 font-light\">Editar Producto</h1>\n\n            <div className=\"flex justify-center mt-5\">\n                <div className=\"w-full max-w-lg\">\n\n                    <Formik \n                        enableReinitialize\n                        initialValues={obtenerProducto}\n                        validationSchema={ schemaValidacion }\n                        onSubmit={ valores => {\n                            actualizarInfoProducto(valores)\n                        }} \n                    >\n\n                        {props => {\n                            return (\n\n\n                    <form\n                        className=\"bg-white shadow-md px-8 pt-6 pb-8 mb-4\"\n                        onSubmit={props.handleSubmit}\n                    >\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"nombre\">\n                                    Nombre\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"nombre\"\n                                    type=\"text\"\n                                    placeholder=\"Nombre Producto\"\n                                    onChange={props.handleChange}\n                                    onBlur={props.handleBlur}\n                                    value={props.values.nombre}\n                                />\n                            </div>\n\n                            { props.touched.nombre && props.errors.nombre ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{props.errors.nombre}</p>\n                                </div>\n                            ) : null  } \n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"existencia\">\n                                    Cantidad Disponible\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"existencia\"\n                                    type=\"number\"\n                                    placeholder=\"Cantidad Disponible\"\n                                    onChange={props.handleChange}\n                                    onBlur={props.handleBlur}\n                                    value={props.values.existencia}\n                                />\n                            </div>\n\n                            { props.touched.existencia && props.errors.existencia ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{props.errors.existencia}</p>\n                                </div>\n                            ) : null  } \n\n                            <div className=\"mb-4\">\n                                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"precio\">\n                                    Precio\n                                </label>\n\n                                <input\n                                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    id=\"precio\"\n                                    type=\"number\"\n                                    placeholder=\"Precio Producto\"\n                                    onChange={props.handleChange}\n                                    onBlur={props.handleBlur}\n                                    value={props.values.precio}\n                                />\n                            </div>\n\n                            { props.touched.precio && props.errors.precio ? (\n                                <div className=\"my-2 bg-red-100 border-l-4 border-red-500 text-red-700 p-4\" >\n                                    <p className=\"font-bold\">Error</p>\n                                    <p>{props.errors.precio}</p>\n                                </div>\n                            ) : null  } \n\n                            <input\n                                type=\"submit\"\n                                className=\"bg-gray-800 w-full mt-5 p-2 text-white uppercase font-bold hover:bg-gray-900\"\n                                value=\"Guardar Cambios\"\n                            />\n                    </form>\n                    )\n                }}\n                    </Formik>\n                </div>\n            </div>\n        </Layout>\n     );\n}\n \nexport default EditarProducto;"]},"metadata":{},"sourceType":"module"}